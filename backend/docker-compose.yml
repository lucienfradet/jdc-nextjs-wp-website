services:
  db:
    image: mysql:5.7
    container_name: jdc-wp-db
    restart: always
    environment:
      MYSQL_DATABASE: jdc_db
      MYSQL_USER: ${MYSQL_WORDPRESS_USER}
      MYSQL_PASSWORD: ${MYSQL_WORDPRESS_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_WORDPRESS_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - wp-network

  wordpress:
    image: wordpress:latest
    container_name: jdc-wp-app
    depends_on:
      - db
    restart: always
    ports:
      - "8080:80"
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: ${MYSQL_WORDPRESS_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_WORDPRESS_PASSWORD}
      WORDPRESS_DB_NAME: jdc_db
      WORDPRESS_HOME: ${WORDPRESS_HOME}
      WORDPRESS_SITEURL: ${WORDPRESS_SITEURL}
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_ALTERNATE_HOST', 'jdc-wp-app');
        define('ALTERNATE_WP_HTTP_HOST', 'jdc-wp-app');
    volumes:
      - ./wordpress/wp-content:/var/www/html/wp-content
      - ./wordpress/upload.ini:/usr/local/etc/php/conf.d/uploads.ini
      - ./wordpress/wp-config.php:/var/www/html/wp-config.php
      - ./wordpress/cron-setup:/cron-setup
    entrypoint: ["/cron-setup/entrypoint.sh"]
    networks:
      - wp-network

  nginx:
    image: nginx:latest
    container_name: jdc-nginx
    restart: always
    depends_on:
      - wordpress
    ports:
      - "8443:443"
      - "8081:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
    networks:
      - wp-network

  jdc-orders-db:
    image: mysql:8.0
    container_name: jdc-orders-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_NEXTJS_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_NEXTJS_DATABASE}
      MYSQL_USER: ${MYSQL_NEXTJS_USER}
      MYSQL_PASSWORD: ${MYSQL_NEXTJS_PASSWORD}
      TZ: America/New_York
    # No ports exposed to host - internal only
    volumes:
      - jdc-orders-data:/var/lib/mysql
      - ./jdc-orders-db/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./jdc-orders-db/init:/docker-entrypoint-initdb.d
    networks:
      - jdc-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_NEXTJS_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  cron:
    image: alpine:latest
    container_name: jdc-cron
    restart: unless-stopped
    volumes:
      - ./cron/entrypoint.sh:/entrypoint.sh
    command: /entrypoint.sh
    networks:
      - jdc-network

  # nextjs:
  #   build:
  #     context: ../frontend/
  #   container_name: jdc-nextjs
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - jdc-orders-db

networks:
  wp-network:
  jdc-network:

volumes:
  db_data:
  jdc-orders-data:
